name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --verbose

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Run fmt
        run: cargo fmt --all -- --check

  pre-commit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Run tests
        run: cargo test --all --verbose

  audit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Run cargo-audit (vulnerability check)
        run: cargo audit
      - name: Install cargo-deny
        run: cargo install cargo-deny
      - name: Check dependency licenses with cargo-deny
        run: cargo deny check licenses
      - name: Check dependency bans (duplicates, yanked, etc.) with cargo-deny
        run: cargo deny check bans

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run code coverage (tarpaulin)
        run: cargo tarpaulin --out Html

  doc:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Build documentation
        run: cargo doc --no-deps --all

  actionlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install actionlint
        run: |
          curl -sSL https://github.com/rhysd/actionlint/releases/download/v1.7.7/actionlint_1.7.7_linux_amd64.tar.gz -o actionlint.tar.gz
          tar -xzf actionlint.tar.gz
          chmod +x actionlint
          sudo mv actionlint /usr/local/bin/
      - name: Lint GitHub Actions workflows
        run: actionlint

  minimal-versions:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install OpenSSL development headers
        run: sudo apt-get update && sudo apt-get install -y libssl-dev
      - name: Set up Rust nightly
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: nightly
          override: true
      - name: Build with minimal versions
        run: cargo update -Z minimal-versions && cargo build

  release-dry-run:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
      - name: Install cargo-release
        run: cargo install cargo-release
      - name: Release dry-run (cargo publish)
        run: cargo publish --dry-run
      # Version bump step removed: semver-check no longer present
      - name: Generate changelog (conventional commits)
        run: |
          pip install git-changelog
          git-changelog --convention conventional --output CHANGELOG.md
